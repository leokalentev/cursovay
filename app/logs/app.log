2025-06-02 20:53:26 - INFO  - hexlet.code.AppApplication - Starting AppApplication using Java 21.0.7 with PID 3664 (D:\cursovay\app\build\classes\java\main started by Леонид in D:\cursovay\app)
2025-06-02 20:53:26 - DEBUG - hexlet.code.AppApplication - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-06-02 20:53:26 - INFO  - hexlet.code.AppApplication - The following 1 profile is active: "development"
2025-06-02 20:53:26 - INFO  - o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-02 20:53:26 - INFO  - o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-02 20:53:27 - INFO  - o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-02 20:53:27 - INFO  - o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 4 JPA repository interfaces.
2025-06-02 20:53:27 - INFO  - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-02 20:53:27 - INFO  - o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-02 20:53:27 - INFO  - o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-06-02 20:53:28 - INFO  - o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-02 20:53:28 - INFO  - o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1393 ms
2025-06-02 20:53:28 - INFO  - o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-02 20:53:28 - INFO  - org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.13.Final
2025-06-02 20:53:28 - INFO  - o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-02 20:53:28 - INFO  - o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-02 20:53:28 - INFO  - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-02 20:53:28 - INFO  - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-06-02 20:53:28 - INFO  - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-02 20:53:28 - INFO  - o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-02 20:53:29 - INFO  - o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    create table categories (
        id bigint generated by default as identity,
        created_at date,
        name varchar(100) not null,
        primary key (id)
    )
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    create table event_statuses (
        id bigint generated by default as identity,
        created_at date,
        name varchar(255) not null,
        slug varchar(255) not null,
        primary key (id)
    )
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    create table events (
        id bigint generated by default as identity,
        created_at date,
        description varchar(255),
        event_date date,
        title varchar(255) not null,
        assignee_id bigint not null,
        category_id bigint not null,
        event_status_id bigint not null,
        primary key (id)
    )
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        created_at date,
        email varchar(255),
        first_name varchar(255),
        last_name varchar(255),
        password varchar(255) not null,
        update_at date,
        primary key (id)
    )
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists categories 
       drop constraint if exists UKt8o6pivur7nn124jehx7cygw5
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists categories 
       add constraint UKt8o6pivur7nn124jehx7cygw5 unique (name)
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists event_statuses 
       drop constraint if exists UKi7y5aj814lqq292vbrj3js7r
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists event_statuses 
       add constraint UKi7y5aj814lqq292vbrj3js7r unique (name)
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists event_statuses 
       drop constraint if exists UK9feeuig8iu7nqx5bjuqag42rf
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists event_statuses 
       add constraint UK9feeuig8iu7nqx5bjuqag42rf unique (slug)
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists events 
       add constraint FK2p6ur2qeeomnph4j2xyxawmqq 
       foreign key (assignee_id) 
       references users
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists events 
       add constraint FKo6mla8j1p5bokt4dxrlmgwc28 
       foreign key (category_id) 
       references categories
2025-06-02 20:53:29 - DEBUG - org.hibernate.SQL - 
    alter table if exists events 
       add constraint FK2fr6bmov203s0p1p86kkj56j2 
       foreign key (event_status_id) 
       references event_statuses
2025-06-02 20:53:29 - INFO  - o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-02 20:53:29 - WARN  - o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-02 20:53:29 - INFO  - o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-02 20:53:29 - INFO  - o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-02 20:53:30 - INFO  - o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-06-02 20:53:30 - INFO  - o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-02 20:53:30 - INFO  - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-02 20:53:30 - INFO  - hexlet.code.AppApplication - Started AppApplication in 4.392 seconds (process running for 4.794)
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, first_name, last_name, password, update_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    select
        es1_0.id 
    from
        event_statuses es1_0 
    where
        es1_0.slug=? 
    fetch
        first ? rows only
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    insert 
    into
        event_statuses
        (created_at, name, slug, id) 
    values
        (?, ?, ?, default)
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    select
        es1_0.id 
    from
        event_statuses es1_0 
    where
        es1_0.slug=? 
    fetch
        first ? rows only
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    insert 
    into
        event_statuses
        (created_at, name, slug, id) 
    values
        (?, ?, ?, default)
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    select
        c1_0.id 
    from
        categories c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    insert 
    into
        categories
        (created_at, name, id) 
    values
        (?, ?, default)
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    select
        c1_0.id 
    from
        categories c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
2025-06-02 20:53:30 - DEBUG - org.hibernate.SQL - 
    insert 
    into
        categories
        (created_at, name, id) 
    values
        (?, ?, default)
2025-06-02 20:53:45 - INFO  - o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-02 20:53:45 - INFO  - o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-02 20:53:45 - INFO  - o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-02 20:53:45 - DEBUG - org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.name 
    from
        categories c1_0
2025-06-02 20:53:45 - DEBUG - org.hibernate.SQL - 
    select
        es1_0.id,
        es1_0.created_at,
        es1_0.name,
        es1_0.slug 
    from
        event_statuses es1_0
2025-06-02 20:53:45 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-02 20:53:45 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-02 20:53:45 - DEBUG - org.hibernate.SQL - 
    select
        e1_0.id,
        e1_0.assignee_id,
        e1_0.category_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.event_date,
        e1_0.event_status_id,
        e1_0.title 
    from
        events e1_0 
    where
        1=1 
        and 1=1 
        and 1=1 
        and 1=1
2025-06-02 20:53:47 - DEBUG - org.hibernate.SQL - 
    select
        es1_0.id,
        es1_0.created_at,
        es1_0.name,
        es1_0.slug 
    from
        event_statuses es1_0
2025-06-02 20:53:47 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0
2025-06-02 20:53:47 - DEBUG - org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.name 
    from
        categories c1_0
2025-06-02 20:53:59 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-02 20:53:59 - DEBUG - org.hibernate.SQL - 
    select
        es1_0.id,
        es1_0.created_at,
        es1_0.name,
        es1_0.slug 
    from
        event_statuses es1_0 
    where
        es1_0.slug=?
2025-06-02 20:53:59 - DEBUG - org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-06-02 20:53:59 - DEBUG - org.hibernate.SQL - 
    insert 
    into
        events
        (assignee_id, category_id, created_at, description, event_date, event_status_id, title, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        es1_0.id,
        es1_0.created_at,
        es1_0.name,
        es1_0.slug 
    from
        event_statuses es1_0
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.name 
    from
        categories c1_0
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        e1_0.id,
        e1_0.assignee_id,
        e1_0.category_id,
        e1_0.created_at,
        e1_0.description,
        e1_0.event_date,
        e1_0.event_status_id,
        e1_0.title 
    from
        events e1_0 
    where
        1=1 
        and 1=1 
        and 1=1 
        and 1=1
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.name 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.update_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-02 20:54:01 - DEBUG - org.hibernate.SQL - 
    select
        es1_0.id,
        es1_0.created_at,
        es1_0.name,
        es1_0.slug 
    from
        event_statuses es1_0 
    where
        es1_0.id=?
